#!/usr/bin/env node

/* A simple cli interface for searching Magic The Gathering cards via scryfall */

/* Usage: scry %search
 * To search for 1 mana, black rats use; cmc:1+color:black+type:rat
 * See https://scryfall.com/docs/syntax for the full syntax guide */

var https = require('https');

var arg = process.argv.slice(2)[0];

var colors = {
    RESET: "\x1b[0m",
    B: "\x1b[40m\x1b[37m",
    R: "\x1b[31m",
    G: "\x1b[32m",
    MIXED: "\x1b[33m",
    U: "\x1b[34m",
    OTHER: "\x1b[35m",
    cyan: "\x1b[36m",
    W: "\x1b[37m",
    COLORLESS: "\x1b[4m",
};
var NA = 'NONE';

var fetch = (scry) => {
    var output = {
        total_cards: scry["total_cards"],
        cards: scry["data"].map((card) => ({
            name: card.name,
            cmc: card.mana_cost,
            type: card.type_line,
            colors: card.colors,
            oracle: card.oracle_text,
            power: card.power,
            toughness: card.toughness,
            prices: card.prices,
            legalities: card.legalities,
        })),
    };

    var render = (card) => `
Name: ${card.name}
Mana: ${card.cmc}
Type: ${card.type}
Oracle: ${card.oracle}
POWER: ${card.power ? card.power : NA}
TOUGHNESS: ${card.toughness ? card.toughness : NA}
GBP: Â£${(card.prices.eur/0.89).toFixed(2)}`;

    console.log("Total Cards: ", output.total_cards);

    for (const card of output.cards) {
        let col;

        if (typeof card.colors === 'undefined') {
            col = 'RESET';
        } else if (card.colors.length >= 3) {
            col = 'MIXED';
        } else if (card.colors.length === 1) {
            col = card.colors[0];
        } else if (card.colors.length === 2) {
            col = "OTHER";
        } else {
            col = 'RESET';
        }

        console.log(colors[col], render(card), colors.RESET);
    }
}

if (arg) {
    https.request({
        host: 'api.scryfall.com',
        path: '/cards/search?q=' + arg
    }, (response) => {
        var str = '';

        response.on('data', function (chunk) {
            str += chunk;
        });

        response.on('end', function () {
            var result = JSON.parse(str);

            if (typeof result.data === 'undefined') {
                console.log('No results');
            } else {
                fetch(result);
            }
        });
    }).end();
} else {
   console.log(`No arg; See ${colors.U}https:\/\/scryfall.com/docs/syntax`);
}
